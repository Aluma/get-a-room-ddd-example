service: getaroom-slotanalytics

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'shared'}
  region: ${opt:region, 'eu-north-1'}
  memorySize: ${opt:memory, 1024}
  timeout: 10
  logRetentionInDays: 7
  versionFunctions: false
  deploymentBucket:
    blockPublicAccess: true
    maxPreviousDeploymentArtifacts: 5
    serverSideEncryption: AES256
  stackTags:
    Usage: ${self:service}
  tags:
    Usage: ${self:service}
  apiGateway:
    minimumCompressionSize: 1024
  tracing:
    apiGateway: true
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - xray:PutTelemetryRecords
            - xray:PutTraceSegments
          Resource:
            - "*"
  environment:
    REGION: ${self:provider.region}
    TABLE_NAME: ${self:custom.config.tableName}

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function

package:
  individually: true
  patterns:
    - node_modules/aws-sdk/**
    - node_modules/aws-lambda/**

custom:
  config:
    awsAccountNumber: 123412341234
    analyticsBusName: analytics
    tableName: getaroom-analytics
  aws:
    databaseArn: "arn:aws:dynamodb:${self:provider.region}:${self:custom.config.awsAccountNumber}:table/${self:custom.config.tableName}"
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: ./**/*.test.ts

functions:
  AddRecord:
    handler: src/infrastructure/adapters/web/AddRecord.handler
    description: Add an analytics record
    events:
      - http:
          method: POST
          path: /addRecord
      - eventBridge:
          eventBus: ${self:custom.config.analyticsBusName} # Create new EventBridge bus
          pattern:
            source:
              - prefix: ""
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: ${self:custom.aws.databaseArn}

resources:
  Resources:
    AnalyticsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.config.tableName}
        AttributeDefinitions:
          - AttributeName: event
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: event
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST